$custom-box-element-separator: "__";

@mixin throw-error-if-not-nested($value, $mixin) {
    @if $value == null {
        @error "Usage of the '#{$mixin}' mixin must be nested inside the 'custom-box' mixin";
    }
}

@mixin custom-box($block) {
    .#{$block} {
        display: inline-block;
        position: relative;

        @content;
    }
}

@mixin custom-box-input($element: input) {
    @include throw-error-if-not-nested(&, custom-box-input);

    @at-root {
        #{&}#{$custom-box-element-separator + $element} {
            opacity: 0;
            position: absolute;

            @content;
        }
    }
}

@mixin custom-box-label($element: label) {
    @include throw-error-if-not-nested(&, custom-box-label);

    @at-root {
        #{&}#{$custom-box-element-separator + $element} {
            display: flex;
            position: relative;

            &:before {
                background-color: red;
                border: 1px solid black;
                content: '';
                display: block;
                flex: 0 0 1rem;
                height: 1rem;
                margin-right: .5rem;
                min-width: 1rem;

                // TODO Add focus styles
            }

            &:after {
                border-bottom: 3px solid white;
                border-right: 3px solid white;
                content: '';
                display: none;
                height: .5rem;
                left: .1rem;
                position: absolute;
                top: .2rem;
                transform: rotate(40deg);
                transform-origin: bottom right;
                width: .25rem;
            }

            @content;
        }
    }

    @at-root {
        #{&} > input[type="checkbox"]:checked + #{&}#{$custom-box-element-separator + $element} {
            &:after {
                display: block;
            }
        }
    }
}
